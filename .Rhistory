sessionInfo()
library(XML)
library(rvest)
library(XML)
library(rvest)
install.packages("rvest")
library(rvest)
install.packages("rvest", dependencies=TRUE)
library(rvest)
library(XML)
library(rvest)
url <- "http://sdvi2.fama.net.my/price/direct/price/daily_commodityRptPrev.asp?Pricing=A&LevelCd=04&PricingDt=2016/1/5&PricingDtAft=2016/1/7"
mypage <- read_html(url)
tbls <- html_nodes(mypage, "table")
str(tbls)
pusat_count <- length(tbls)
pusat_count
hdr_1 <- tbls[[1]]
mydf_1 <- html_table(hdr_1, fill=TRUE)
mydf_1[2,1] # header
splitNames = strsplit(mydf_1[2,1],"\\,")
tarikh <- splitNames[[1]][2]
z <- as.Date(tarikh, "%d %b %Y")
z
tarikh <- " 5 JANUARY 2016"
z <- as.Date(tarikh, "%d %b %Y")
price_type <- splitNames[[1]][1]
if ( length(grep("LADANG", price_type)) ) {
filename <- "LADANG"
} else if ( length(grep("RUNCIT", price_type)) ) {
filename <- "RUNCIT"
} else if ( length(grep("BORONG", price_type)) ) {
filename <- "BORONG"
} else
filename <- "UNKNOWN"
filename
z
mydf <- data.frame()
i <- 2
while ( i < pusat_count ) {
print(i)
pusat_info <- html_table(tbls[[i]])
splitNames = strsplit(pusat_info[1,1],"\\:")
pusat_state <- splitNames[[1]][2]
pusat_state
splitNames = strsplit(pusat_state,"\\,")
pusat <- splitNames[[1]][1]
negeri <- splitNames[[1]][2]
i <- i +1;
pusat_price <- html_table(tbls[[i]], fill=TRUE)
pusat_price <- pusat_price[3:nrow(pusat_price),] # get the data only
pusat_price$pusat  <- pusat
pusat_price$negeri  <- negeri
pusat_price$tarikh  <- z
mydf <- rbind(mydf, pusat_price)
i <- i +1;
}
# replace column names
names(mydf) <- c("Nama Varieti", "Gred", "Unit", "Harga Tinggi", "Harga Purata", "Harga Rendah", "Pusat", "Negeri", "Tarikh")
#filename <- "BORONG"
#filename <- paste0( filename, "-")
filename <- paste0( filename, tarikh)
filename <- gsub(" ","_",filename)
filename <- paste0(filename, ".csv")
filename
write.csv(mydf, filename, row.names = FALSE)
url <- "http://sdvi2.fama.net.my/price/direct/price/daily_commodityRpt.asp?Pricing=A&LevelCd=04&PricingDt=2016/1/7&PricingDtPrev=2016/1/5"
mypage <- read_html(url)
tbls <- html_nodes(mypage, "table")
str(tbls)
pusat_count <- length(tbls)
pusat_count
hdr_1 <- tbls[[1]]
mydf_1 <- html_table(hdr_1, fill=TRUE)
mydf_1[2,1] # header
splitNames = strsplit(mydf_1[2,1],"\\,")
tarikh <- " 7 JANUARY 2016"
z <- as.Date(tarikh, "%d %b %Y")
price_type <- splitNames[[1]][1]
if ( length(grep("LADANG", price_type)) ) {
filename <- "LADANG"
} else if ( length(grep("RUNCIT", price_type)) ) {
filename <- "RUNCIT"
} else if ( length(grep("BORONG", price_type)) ) {
filename <- "BORONG"
} else
filename <- "UNKNOWN"
filename
z
mydf <- data.frame()
i <- 2
while ( i < pusat_count ) {
print(i)
pusat_info <- html_table(tbls[[i]])
splitNames = strsplit(pusat_info[1,1],"\\:")
pusat_state <- splitNames[[1]][2]
pusat_state
splitNames = strsplit(pusat_state,"\\,")
pusat <- splitNames[[1]][1]
negeri <- splitNames[[1]][2]
i <- i +1;
pusat_price <- html_table(tbls[[i]], fill=TRUE)
pusat_price <- pusat_price[3:nrow(pusat_price),] # get the data only
pusat_price$pusat  <- pusat
pusat_price$negeri  <- negeri
pusat_price$tarikh  <- z
mydf <- rbind(mydf, pusat_price)
i <- i +1;
}
# replace column names
names(mydf) <- c("Nama Varieti", "Gred", "Unit", "Harga Tinggi", "Harga Purata", "Harga Rendah", "Pusat", "Negeri", "Tarikh")
#filename <- "BORONG"
#filename <- paste0( filename, "-")
filename <- paste0( filename, tarikh)
filename <- gsub(" ","_",filename)
filename <- paste0(filename, ".csv")
filename
write.csv(mydf, filename, row.names = FALSE)
url <- "http://sdvi2.fama.net.my/price/direct/price/daily_commodityRptPrev.asp?Pricing=A&LevelCd=03&PricingDt=2016/1/5&PricingDtAft=2016/1/7"
mypage <- read_html(url)
tbls <- html_nodes(mypage, "table")
str(tbls)
pusat_count <- length(tbls)
pusat_count
hdr_1 <- tbls[[1]]
mydf_1 <- html_table(hdr_1, fill=TRUE)
mydf_1[2,1] # header
splitNames = strsplit(mydf_1[2,1],"\\,")
tarikh <- " 5 JANUARY 2016"
z <- as.Date(tarikh, "%d %b %Y")
price_type <- splitNames[[1]][1]
if ( length(grep("LADANG", price_type)) ) {
filename <- "LADANG"
} else if ( length(grep("RUNCIT", price_type)) ) {
filename <- "RUNCIT"
} else if ( length(grep("BORONG", price_type)) ) {
filename <- "BORONG"
} else
filename <- "UNKNOWN"
filename
z
mydf <- data.frame()
i <- 2
while ( i < pusat_count ) {
print(i)
pusat_info <- html_table(tbls[[i]])
splitNames = strsplit(pusat_info[1,1],"\\:")
pusat_state <- splitNames[[1]][2]
pusat_state
splitNames = strsplit(pusat_state,"\\,")
pusat <- splitNames[[1]][1]
negeri <- splitNames[[1]][2]
i <- i +1;
pusat_price <- html_table(tbls[[i]], fill=TRUE)
pusat_price <- pusat_price[3:nrow(pusat_price),] # get the data only
pusat_price$pusat  <- pusat
pusat_price$negeri  <- negeri
pusat_price$tarikh  <- z
mydf <- rbind(mydf, pusat_price)
i <- i +1;
}
# replace column names
names(mydf) <- c("Nama Varieti", "Gred", "Unit", "Harga Tinggi", "Harga Purata", "Harga Rendah", "Pusat", "Negeri", "Tarikh")
#filename <- "BORONG"
#filename <- paste0( filename, "-")
filename <- paste0( filename, tarikh)
filename <- gsub(" ","_",filename)
filename <- paste0(filename, ".csv")
filename
write.csv(mydf, filename, row.names = FALSE)
url <- "http://sdvi2.fama.net.my/price/direct/price/daily_commodityRpt.asp?Pricing=A&LevelCd=03&PricingDt=2016/1/7&PricingDtPrev=2016/1/5"
mypage <- read_html(url)
tbls <- html_nodes(mypage, "table")
str(tbls)
pusat_count <- length(tbls)
pusat_count
hdr_1 <- tbls[[1]]
mydf_1 <- html_table(hdr_1, fill=TRUE)
mydf_1[2,1] # header
splitNames = strsplit(mydf_1[2,1],"\\,")
tarikh <- " 7 JANUARY 2016"
z <- as.Date(tarikh, "%d %b %Y")
price_type <- splitNames[[1]][1]
if ( length(grep("LADANG", price_type)) ) {
filename <- "LADANG"
} else if ( length(grep("RUNCIT", price_type)) ) {
filename <- "RUNCIT"
} else if ( length(grep("BORONG", price_type)) ) {
filename <- "BORONG"
} else
filename <- "UNKNOWN"
filename
z
mydf <- data.frame()
i <- 2
while ( i < pusat_count ) {
print(i)
pusat_info <- html_table(tbls[[i]])
splitNames = strsplit(pusat_info[1,1],"\\:")
pusat_state <- splitNames[[1]][2]
pusat_state
splitNames = strsplit(pusat_state,"\\,")
pusat <- splitNames[[1]][1]
negeri <- splitNames[[1]][2]
i <- i +1;
pusat_price <- html_table(tbls[[i]], fill=TRUE)
pusat_price <- pusat_price[3:nrow(pusat_price),] # get the data only
pusat_price$pusat  <- pusat
pusat_price$negeri  <- negeri
pusat_price$tarikh  <- z
mydf <- rbind(mydf, pusat_price)
i <- i +1;
}
# replace column names
names(mydf) <- c("Nama Varieti", "Gred", "Unit", "Harga Tinggi", "Harga Purata", "Harga Rendah", "Pusat", "Negeri", "Tarikh")
#filename <- "BORONG"
#filename <- paste0( filename, "-")
filename <- paste0( filename, tarikh)
filename <- gsub(" ","_",filename)
filename <- paste0(filename, ".csv")
filename
write.csv(mydf, filename, row.names = FALSE)
url <- "http://sdvi2.fama.net.my/price/direct/price/daily_commodityRptPrev.asp?Pricing=A&LevelCd=01&PricingDt=2016/1/5&PricingDtAft=2016/1/7"
mypage <- read_html(url)
tbls <- html_nodes(mypage, "table")
str(tbls)
pusat_count <- length(tbls)
pusat_count
hdr_1 <- tbls[[1]]
mydf_1 <- html_table(hdr_1, fill=TRUE)
mydf_1[2,1] # header
splitNames = strsplit(mydf_1[2,1],"\\,")
tarikh <- " 5 JANUARY 2016"
z <- as.Date(tarikh, "%d %b %Y")
price_type <- splitNames[[1]][1]
if ( length(grep("LADANG", price_type)) ) {
filename <- "LADANG"
} else if ( length(grep("RUNCIT", price_type)) ) {
filename <- "RUNCIT"
} else if ( length(grep("BORONG", price_type)) ) {
filename <- "BORONG"
} else
filename <- "UNKNOWN"
filename
z
mydf <- data.frame()
i <- 2
while ( i < pusat_count ) {
print(i)
pusat_info <- html_table(tbls[[i]])
splitNames = strsplit(pusat_info[1,1],"\\:")
pusat_state <- splitNames[[1]][2]
pusat_state
splitNames = strsplit(pusat_state,"\\,")
pusat <- splitNames[[1]][1]
negeri <- splitNames[[1]][2]
i <- i +1;
pusat_price <- html_table(tbls[[i]], fill=TRUE)
pusat_price <- pusat_price[3:nrow(pusat_price),] # get the data only
pusat_price$pusat  <- pusat
pusat_price$negeri  <- negeri
pusat_price$tarikh  <- z
mydf <- rbind(mydf, pusat_price)
i <- i +1;
}
# replace column names
names(mydf) <- c("Nama Varieti", "Gred", "Unit", "Harga Tinggi", "Harga Purata", "Harga Rendah", "Pusat", "Negeri", "Tarikh")
#filename <- "BORONG"
#filename <- paste0( filename, "-")
filename <- paste0( filename, tarikh)
filename <- gsub(" ","_",filename)
filename <- paste0(filename, ".csv")
filename
write.csv(mydf, filename, row.names = FALSE)
url <- "http://sdvi2.fama.net.my/price/direct/price/daily_commodityRpt.asp?Pricing=A&LevelCd=01&PricingDt=2016/1/7&PricingDtPrev=2016/1/5"
mypage <- read_html(url)
tbls <- html_nodes(mypage, "table")
str(tbls)
pusat_count <- length(tbls)
pusat_count
hdr_1 <- tbls[[1]]
mydf_1 <- html_table(hdr_1, fill=TRUE)
mydf_1[2,1] # header
splitNames = strsplit(mydf_1[2,1],"\\,")
tarikh <- " 7 JANUARY 2016"
z <- as.Date(tarikh, "%d %b %Y")
price_type <- splitNames[[1]][1]
if ( length(grep("LADANG", price_type)) ) {
filename <- "LADANG"
} else if ( length(grep("RUNCIT", price_type)) ) {
filename <- "RUNCIT"
} else if ( length(grep("BORONG", price_type)) ) {
filename <- "BORONG"
} else
filename <- "UNKNOWN"
filename
z
mydf <- data.frame()
i <- 2
while ( i < pusat_count ) {
print(i)
pusat_info <- html_table(tbls[[i]])
splitNames = strsplit(pusat_info[1,1],"\\:")
pusat_state <- splitNames[[1]][2]
pusat_state
splitNames = strsplit(pusat_state,"\\,")
pusat <- splitNames[[1]][1]
negeri <- splitNames[[1]][2]
i <- i +1;
pusat_price <- html_table(tbls[[i]], fill=TRUE)
pusat_price <- pusat_price[3:nrow(pusat_price),] # get the data only
pusat_price$pusat  <- pusat
pusat_price$negeri  <- negeri
pusat_price$tarikh  <- z
mydf <- rbind(mydf, pusat_price)
i <- i +1;
}
# replace column names
names(mydf) <- c("Nama Varieti", "Gred", "Unit", "Harga Tinggi", "Harga Purata", "Harga Rendah", "Pusat", "Negeri", "Tarikh")
#filename <- "BORONG"
#filename <- paste0( filename, "-")
filename <- paste0( filename, tarikh)
filename <- gsub(" ","_",filename)
filename <- paste0(filename, ".csv")
filename
write.csv(mydf, filename, row.names = FALSE)
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
install_github('slidifyLibraries', 'ramnathv')
isGeneric(lm)
?isGeneric
library(pryr)
install.packages(pryr)
dgamma
predict()
predict
mean
show
colcums
colSums
lm
dgamma
show
getOption("defaultpackages")
getOption("defaultPackages")
?show
?mean
?lm
?predict
?dgamma
?lm
?colSums
?show
?predict
?dgamma
?lm
library(help="base")
install.packages("pryr")
ftype(show())
library(pryr)
ftype(show)
ftype(lm)
ftype(mean)
ftype(dgamma)
ftype(colSums)
ftype(predict)
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
install.packages('digest')
install.packages("digest")
devtools::install_github('rstudio/rsconnect')
library('rsconnect')
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
shinyapps::setAccountInfo(name='ruslandros', token='2117A4395E13CA895B97410A89EF78C1', secret='01xZSMlEEBQcPjGzekM7SP6wdRT/vTWJf7f/plBA')
library(shinyapps)
shinyapps::deployApp('path/to/your/app')
library(devtools)
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
setwd("D:/ruslan_d/coursera/data_products/test1")
runApp()
runApp()
shiny::runApp()
shiny::runApp()
library(shinyapps)
runApp()
shiny::runApp()
setwd("D:/ruslan_d/coursera/data_products/project")
shiny::runApp()
runcit <- read.csv("RUNCIT_21_JANUARY_2016.csv")
str(runcit)
summary(runcit)
data_ayam <- subset(runcit, Nama.Varieti=="AYAM PROSES (STANDARD)")
head(data_ayam)
str(data_ayam)
sort_data <- data_ayam[order(-data_ayam$Harga.Purata),]
sort_data
aa <- sort_data[,c(5,7,8)]
aa
class(aa)
library(knitr)
library(printr)
kable(head(data_ayam),align = 'c')
head(data_ayam)
str(data_ayam)
sort_data <- data_ayam[order(-data_ayam$Harga.Purata),]
sort_data
aa <- sort_data[,c(5,7,8)]
aa
head(data_ayam)
bb <- data.table(aa)
bb <- data.table(aa)
?data.table
bb <- data.table(aa)
source('test.R')
fama_table()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
bb <- data.table(aa)
install.packages('data.table')
install.packages("data.table")
bb <- data.table(aa)
library('data.table')
bb <- data.table(aa)
bb
library(data.table)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
avg <- mean(sort_data$Harga.Purata)
avg
avg <- round(mean(sort_data$Harga.Purata),2)
avg
y<-avg
y
fama$y
fama(x,y)
fama_table(x,y)
fama_table(x,y)
source("test.R")
fama_table(x,y)
y
z
fama_table$y
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
source(test.R)
source('test.R')
fama_table("aaa")
source('test.R')
fama_table("aaa")
source('test.R')
fama_table("aaa")
shiny::runApp()
shiny::runApp()
source('test.R')
fama_table("chicken")
fama_table("beef")
fama_table("lamnb")
fama_table("lamb")
fama_table("beef")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
